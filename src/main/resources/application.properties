spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.mvc.format.date=yyyy-MM-dd HH:mm:ss
server.servlet.context-path=/springboot-learning
server.port=8080
spring.cache.type=redis
spring.redis.host=192.168.95.128
spring.redis.port=6379
spring.redis.password=Zhu@1912
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.95.130:3306/mydatabase?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
#spring.datasource.username=root
#spring.datasource.password=Zhu@1912
spring.jpa.show-sql=true
mybatis.mapper-locations=classpath*:mapper/*.xml
debug=true
# logging.config=classpath:logback-config.xml
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.cache=DEBUG

spring.kafka.bootstrap-servers=192.168.95.133:9092
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.redis.hgz.redis.entity

spring.cloud.config.uri=http://127.0.0.1:8081/
spring.cloud.config.name=springcloud-config-server

spring.shardingsphere.database.name=mydatabase
spring.shardingsphere.datasource.names=master,slave1,slave2,slave3

spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://192.168.95.130:3306/mydatabase?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=Zhu@1912

spring.shardingsphere.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:mysql://192.168.95.131:3306/mydatabase?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave1.username=replica_user
spring.shardingsphere.datasource.slave1.password=Zhu@2009

spring.shardingsphere.datasource.slave2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave2.jdbc-url=jdbc:mysql://192.168.95.132:3306/mydatabase?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave2.username=replica_user
spring.shardingsphere.datasource.slave2.password=Zhu@2009

spring.shardingsphere.datasource.slave3.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave3.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave3.jdbc-url=jdbc:mysql://192.168.95.133:3306/mydatabase?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave3.username=replica_user
spring.shardingsphere.datasource.slave3.password=Zhu@2009

#在这个配置中，我们使用了round-robin算法进行负载均衡。这个算法会依次轮询选择从库进行读操作，实现了基本的负载均衡功能。
#除了round-robin算法外，ShardingSphere还提供了其他一些负载均衡算法，例如random、least-active等。你可以根据实际需求选择合适的负载均衡算法来实现读写分离。
#spring.shardingsphere.rules.readwrite-splitting.data-sources.master.load-balancer-name=random
#spring.shardingsphere.rules.readwrite-splitting.data-sources.master.static-strategy.write-data-source-name=master
#spring.shardingsphere.rules.readwrite-splitting.data-sources.master.static-strategy.read-data-source-names=slave1,slave2,slave3

spring.shardingsphere.rules.readwrite-splitting.data-sources.mydatabase.load-balancer-name=round_robin
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round_robin.type=random
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.round_robin.type=ROUND_ROBIN
spring.shardingsphere.rules.readwrite-splitting.data-sources.mydatabase.static-strategy.write-data-source-name=master
spring.shardingsphere.rules.readwrite-splitting.data-sources.mydatabase.static-strategy.read-data-source-names=slave1,slave2,slave3

#spring.shardingsphere.rules.readwrite-splitting.data-sources.slave2.load-balancer-name=random
#spring.shardingsphere.rules.readwrite-splitting.data-sources.slave2.static-strategy.write-data-source-name=master
#spring.shardingsphere.rules.readwrite-splitting.data-sources.slave2.static-strategy.read-data-source-names=slave1,slave2,slave3

#spring.shardingsphere.rules.readwrite-splitting.data-sources.slave3.load-balancer-name=random
#spring.shardingsphere.rules.readwrite-splitting.data-sources.slave3.static-strategy.write-data-source-name=master
#spring.shardingsphere.rules.readwrite-splitting.data-sources.slave3.static-strategy.read-data-source-names=slave1,slave2,slave3
#staticStrategy
#spring.shardingsphere.sharding.master-data-source-name=master
#spring.shardingsphere.sharding.slave-data-source-names=slave1,slave2,slave3

#shardingsphere:
#datasource:
#sharding:
#rules:
#- !READWRITE_SPLITTING
#dataSources:
#readwrite_ds:
#staticStrategy:
#writeDataSourceName: write_ds
#readDataSourceNames:
#- read_ds_0
#- read_ds_1
#loadBalancerName: random

